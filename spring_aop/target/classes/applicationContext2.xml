<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--配置目标类-->
    <bean id="customerDao" class="com.yuan.aop.demo4.CustomerDao"/>

    <!--环绕通知配置-->
    <bean id="myRoundAdvice" class="com.yuan.aop.demo4.MyRoundAdvice"/>

    <!--一般切面是使用通知作为切面的，若要对目标类的某个方法进行增强，则需要配置一个带切入点的切面-->
    <!--利用RegexpMethodPointcutAdvisor这个实现类，通过编写正则表达式的方式，设置要拦截的具体方法-->
    <bean id="myAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <!--pattern或patterns中配置正则表达式，patterns中可以匹配多个对象，每个对象之间用逗号隔开-->
        <!--.表示任何字符，*表示任意次数-->
        <!--拦截save这一个方法-->
        <!--<property name="pattern" value=".*save.*"/>-->
        <!--拦截save和delete两个方法-->
        <property name="patterns" value=".*save.*,.*delete.*"/>
        <!--应用哪种通知-->
        <property name="advice" ref="myRoundAdvice"/>
    </bean>


    <!--配置产生代理-->
    <!--使用ProxyFactoryBean创建AOP代理-->
    <bean id="customerDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--设置要代理的目标类，对哪个类进行代理-->
        <property name="target" ref="customerDao"/>
        <!--设置是对类代理，使用CGLIB代理-->
        <property name="proxyTargetClass" value="true"/>
        <!--设置拦截器的名称，即用哪个拦截器进行拦截-->
        <property name="interceptorNames" value="myAdvisor"/>
    </bean>
</beans>